############## Consultando MongoDB desde el front
Configura MongoDB Atlas: Crea una base de datos en MongoDB Atlas y habilita el acceso desde cualquier IP (solo para propósitos de prueba).

Instala MongoDB Realm Web SDK

<script src="https://unpkg.com/mongodb-stitch-browser-sdk@4.8.0/dist/stitch.js"></script>



<script>
  const client = stitch.Stitch.initializeDefaultAppClient('your-app-id');
  const mongodb = client.getServiceClient(stitch.RemoteMongoClient.factory, 'mongodb-atlas');
  const collection = mongodb.db('your-database').collection('your-collection');

  async function fetchData() {
    try {
      await client.auth.loginWithCredential(new stitch.AnonymousCredential());
      const data = await collection.find({}).asArray();
      console.log(data);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  }

  fetchData();
</script>

############## consultando MongoDB desde el back

const express = require('express');
const mongoose = require('mongoose');
const app = express();

mongoose.connect('mongodb://localhost:27017/tu_base_de_datos', { useNewUrlParser: true, useUnifiedTopology: true });

const DataSchema = new mongoose.Schema({
  // define tu esquema aquí
});

const Data = mongoose.model('Data', DataSchema);

app.get('/api/data', async (req, res) => {
  try {
    const data = await Data.find();
    res.json(data);
  } catch (error) {
    res.status(500).send(error);
  }
});

app.listen(3000, () => {
  console.log('Servidor escuchando en el puerto 3000');
});


